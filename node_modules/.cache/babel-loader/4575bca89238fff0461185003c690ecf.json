{"ast":null,"code":"var _jsxFileName = \"/Users/tarkantaboglu/Downloads/ramp-fe-challenge-2/src/components/InputCheckbox/index.tsx\",\n    _s = $RefreshSig$();\n\n// import classNames from \"classnames\"\n// import { useRef } from \"react\"\n// import { InputCheckboxComponent } from \"./types\"\n// export const InputCheckbox: InputCheckboxComponent = ({ id, checked = false, disabled, onChange }) => {\n//   const { current: inputId } = useRef(`RampInputCheckbox-${id}`)\n//   return (\n//     <div className=\"RampInputCheckbox--container\" data-testid={inputId}>\n//       <label\n//         className={classNames(\"RampInputCheckbox--label\", {\n//           \"RampInputCheckbox--label-checked\": checked,\n//           \"RampInputCheckbox--label-disabled\": disabled,\n//         })}\n//       />\n//       <input\n//         id={inputId}\n//         type=\"checkbox\"\n//         className=\"RampInputCheckbox--input\"\n//         checked={checked}\n//         disabled={disabled}\n//         onChange={() => onChange(!checked)}\n//       />\n//     </div>\n//   )\n// }\nimport classNames from \"classnames\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputCheckbox = _ref => {\n  _s();\n\n  let {\n    id,\n    checked = false,\n    disabled,\n    onChange\n  } = _ref;\n  const {\n    current: inputId\n  } = useRef(`RampInputCheckbox-${id}`);\n  const [isChecked, setIsChecked] = useState(checked);\n  useEffect(() => {\n    setIsChecked(checked);\n  }, [checked]);\n\n  const handleOnChange = newChecked => {\n    setIsChecked(newChecked);\n    onChange(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampInputCheckbox--container\",\n    \"data-testid\": inputId,\n    onClick: e => e.stopPropagation(),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classNames(\"RampInputCheckbox--label\", {\n        \"RampInputCheckbox--label-checked\": isChecked,\n        \"RampInputCheckbox--label-disabled\": disabled\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: inputId,\n      type: \"checkbox\",\n      className: \"RampInputCheckbox--input\",\n      checked: isChecked,\n      disabled: disabled,\n      onChange: e => handleOnChange(e.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputCheckbox, \"3WCcl45H08KrBWt4oSYOGXF6YCk=\");\n\n_c = InputCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputCheckbox\");","map":{"version":3,"names":["classNames","useRef","useState","useEffect","InputCheckbox","id","checked","disabled","onChange","current","inputId","isChecked","setIsChecked","handleOnChange","newChecked","e","stopPropagation","target"],"sources":["/Users/tarkantaboglu/Downloads/ramp-fe-challenge-2/src/components/InputCheckbox/index.tsx"],"sourcesContent":["// import classNames from \"classnames\"\n// import { useRef } from \"react\"\n// import { InputCheckboxComponent } from \"./types\"\n\n// export const InputCheckbox: InputCheckboxComponent = ({ id, checked = false, disabled, onChange }) => {\n//   const { current: inputId } = useRef(`RampInputCheckbox-${id}`)\n\n//   return (\n//     <div className=\"RampInputCheckbox--container\" data-testid={inputId}>\n//       <label\n//         className={classNames(\"RampInputCheckbox--label\", {\n//           \"RampInputCheckbox--label-checked\": checked,\n//           \"RampInputCheckbox--label-disabled\": disabled,\n//         })}\n//       />\n//       <input\n//         id={inputId}\n//         type=\"checkbox\"\n//         className=\"RampInputCheckbox--input\"\n//         checked={checked}\n//         disabled={disabled}\n//         onChange={() => onChange(!checked)}\n//       />\n//     </div>\n//   )\n// }\n\nimport classNames from \"classnames\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { InputCheckboxComponent } from \"./types\";\n\nexport const InputCheckbox: InputCheckboxComponent = ({\n  id,\n  checked = false,\n  disabled,\n  onChange,\n}) => {\n  const { current: inputId } = useRef(`RampInputCheckbox-${id}`);\n  const [isChecked, setIsChecked] = useState(checked);\n\n  useEffect(() => {\n    setIsChecked(checked);\n  }, [checked]);\n\n  const handleOnChange = (newChecked: boolean) => {\n    setIsChecked(newChecked);\n    onChange(newChecked);\n  };\n\n  return (\n    <div\n      className=\"RampInputCheckbox--container\"\n      data-testid={inputId}\n      onClick={(e) => e.stopPropagation()}\n    >\n      <label\n        className={classNames(\"RampInputCheckbox--label\", {\n          \"RampInputCheckbox--label-checked\": isChecked,\n          \"RampInputCheckbox--label-disabled\": disabled,\n        })}\n      />\n      <input\n        id={inputId}\n        type=\"checkbox\"\n        className=\"RampInputCheckbox--input\"\n        checked={isChecked}\n        disabled={disabled}\n        onChange={(e) => handleOnChange(e.target.checked)}\n      />\n    </div>\n  );\n};\n"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAGA,OAAO,MAAMC,aAAqC,GAAG,QAK/C;EAAA;;EAAA,IALgD;IACpDC,EADoD;IAEpDC,OAAO,GAAG,KAF0C;IAGpDC,QAHoD;IAIpDC;EAJoD,CAKhD;EACJ,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAAuBT,MAAM,CAAE,qBAAoBI,EAAG,EAAzB,CAAnC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAACI,OAAD,CAA1C;EAEAH,SAAS,CAAC,MAAM;IACdS,YAAY,CAACN,OAAD,CAAZ;EACD,CAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;EAIA,MAAMO,cAAc,GAAIC,UAAD,IAAyB;IAC9CF,YAAY,CAACE,UAAD,CAAZ;IACAN,QAAQ,CAACM,UAAD,CAAR;EACD,CAHD;;EAKA,oBACE;IACE,SAAS,EAAC,8BADZ;IAEE,eAAaJ,OAFf;IAGE,OAAO,EAAGK,CAAD,IAAOA,CAAC,CAACC,eAAF,EAHlB;IAAA,wBAKE;MACE,SAAS,EAAEhB,UAAU,CAAC,0BAAD,EAA6B;QAChD,oCAAoCW,SADY;QAEhD,qCAAqCJ;MAFW,CAA7B;IADvB;MAAA;MAAA;MAAA;IAAA,QALF,eAWE;MACE,EAAE,EAAEG,OADN;MAEE,IAAI,EAAC,UAFP;MAGE,SAAS,EAAC,0BAHZ;MAIE,OAAO,EAAEC,SAJX;MAKE,QAAQ,EAAEJ,QALZ;MAME,QAAQ,EAAGQ,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACE,MAAF,CAASX,OAAV;IANjC;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAxCM;;GAAMF,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}